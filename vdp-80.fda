0000 DATA RESET
D0E4 CODE INITIAL_STACK
D0F6 CODE INPUT_DEVICE
D0F7 CODE OUTPUT_DEVICE
D800 CODE LOAD "Entry point of ROM of the IMSAI VDP-80\nThis code is mapped at 0000H and executed\nIt changes the mapping and boots the monitor"
D810 CODE BOOT "Boot procedure"
D83C CODE SKIP
D853 CODE MONRESET "Reset stack and enter monitor"
D856 CODE MONENTRY "Standard monitor entry point"
D868 CODE LOOKUPJMP
D875 CODE CMD_COLON "':' command.\nUse a different jump table for :D, :I and :O"
D87B CODE LD87B
D891 CODE LD891
D896 CODE LD896
D8A7 CODE REBOOT "Reset memory mapping and jumps to 0x0000"
D8AE CODE LD8AE
D8B0 CODE LD8B0
D8CC CODE LD8CC
D8E3 CODE LD8E3
D8E9 CODE LD8E9
D8F7 CODE LD8F7
D917 CODE LD917
D920 CODE LD920
D931 CODE LD931
D948 CODE USE_DEVICE "Adds a device for input and output"
D953 CODE LD953
D96B CODE LD96B "Write 0x00, 0x00, 0x00, 0x40, 0xae and 0x37 in 13H"
D977 CODE LD977 "Write 0x00, 0x00, 0x00 and 0x40 in 13H"
D983 CODE CMD_Z
D98C CODE LD98C
D9A0 CODE LD9A0
D9AC CODE CMD_J
D9AD CODE CMD_C
D9B1 CODE CMD_K
D9B9 CODE CMD_Q
D9C6 CODE CMD_E
D9C9 CODE EDIT_LOOP
D9E0 CODE PRT_READ_HEX2
D9EC CODE CMD_D
D9EF CODE LD9EF
D9F2 CODE LD9F2
D9F3 CODE LD9F3
D9FA CODE LD9FA
DA0B CODE LDA0B
DA23 CODE UNPRINTABLE "Uses '.' for unprintable ASCII characters"
DA25 CODE LDA25
DA34 CODE LDA34
DA4F CODE LDA4F
DA53 CODE CMD_P
DA54 CODE CMD_U
DA60 CODE LDA60
DA69 CODE CMD_H
DA82 CODE LDA82
DA96 CODE LDA96
DAB2 CODE CMD_T
DAB6 CODE LDAB6
DAB8 CODE LOOP_16
DACE CODE LDACE
DAD7 CODE CMD_M
DADA CODE LDADA
DADD CODE CMD_F
DAE9 CODE CMD_I
DAEA CODE CMD_O
DB08 CODE RETADRS
DB0C CODE CMD_Y
DB17 CODE LDB17
DB1B CODE CMD_V
DB1E CODE LDB1E
DB2D CODE LDB2D
DB38 CODE CMD_S
DB45 CODE LDB45
DB56 CODE LDB56
DB5E CODE LDB5E
DB69 CODE CMD_X
DB6A CODE CMD_L
DB85 CODE LDB85
DB88 CODE LDB88
DB8B CODE INVALIDHEX "Called when character is invalid Hex\nPrints 'T' and goes to monitor"
DB8D CODE PRT_THEN_MON "Prints a char and jump to monitor"
DB93 CODE LDB93
DBA2 CODE LDBA2
DBB1 CODE LDBB1
DBD1 CODE LDBD1
DBDB CODE LDBDB
DBF5 CODE LDBF5
DC01 CODE LDC01
DC0F CODE LDC0F
DC14 CODE LDC14
DC23 CODE LDC23
DC24 CODE LDC24
DC2F CODE CMD_G
DC36 CODE LDC36
DC43 CODE LDC43
DC53 CODE LDC53
DC5D CODE CMD_A
DC63 CODE LDC63
DC69 CODE LDC69
DC79 CODE LDC79
DC7D CODE LDC7D
DC8A CODE LDC8A
DC93 CODE CMD_B
DC9D CODE LDC9D
DCB5 STRZ STRNOTREADY
DCBF STRZ STRDISKERR
DCCA CODE INIT_d0ec
DCCF CODE LOOP
DCDE CODE CMD_N
DCE8 CODE LDCE8
DCEC CODE LDCEC
DCF4 CODE LOOP_944
DD1B CODE LDD1B
DD2B CODE CMD_R
DD31 CODE CMD_W
DD36 CODE CMD_RW
DD5D CODE LDD5D
DD6B CODE LDD6B
DD73 CODE LDD73
DD84 CODE LDD84
DD8F CODE PRINVALID "Prints "
DD95 STRZ STRINVALID
DD9D CODE CMD_XD
DDA3 CODE CMD_XI
DDA9 CODE CMD_XO
DDAF CODE READ_START_END_LEN "Reads address in HL and DE\nBC = DE-HL+1"
DDBC CODE READ_HEX_HL_DE
DDC1 CODE LDDC1
DDCC CODE READ_HEX_DE
DDD2 CODE LDDD2
DDD8 CODE READ_HEX_HL_DE0
DDE1 CODE TABLOOKUPA
DDE2 CODE NEXT_ENTRY
DDEF CODE FOUND
DDF5 CODE READ_FROM_A
DDFD CODE READ_FROM_C
DE05 CODE READ_FROM_B
DE0D CODE WRITE_TO_A
DE1A CODE WRITE_TO_C
DE27 CODE WRITE_TO_B
DE34 CODE WAIT_CHAR "Reads a character until one is available"
DE3B CODE READ_CHAR "Reads one character from the current input device\nDoes not wait, returns 0 if no chars\n"
DE59 CODE PRINTSTR "Prints zero-terminated string\npointed to by HL\n"
DE66 CODE PRTCHAR "Print one character on the current output device"
DE8A CODE READCHR_CTRC "Reads one character (uppercase)\nReset monitor if ^C (or ^U)\n(ESC management unclear)"
DEAC CODE TOUPPER "Makes lowercase characters uppercase\nOthers unchanged\n"
DEB5 CODE PRTCRLF "Prints a carriage return and a line feed\n"
DEBF CODE PRTHEX2 "Prints 2 digits hex number"
DEC8 CODE PRTHEX1 "Prints single digit hex number\n(using the head-scratching classic DAA hack)"
DED3 CODE PRTHEX4SPC "Prints HL as 4 hex digits\nfollowed by a space\n"
DED8 CODE PRTHEX2SPC "Prints 2 digits hexadecimal\nfollowed by a space\n"
DEDB CODE PRTSPACE "Prints a space\n"
DEE0 CODE READ_HEXHL_0
DEE3 CODE READ_HEX_HL
DEEF CODE APPENDHEX
DEF9 CODE HEXFROMASCII "Takes an ASCII character (0-9A-F) and convert it to hex (0-F).\nSets Carry if invalid."
DF08 CODE DONE
DF0A CODE LDF0A
DF0E CODE LDF0E
DF12 CODE DUMP_EOL
DF15 CODE DUMP_BOL
DF1F DATA UNUSED "This data does not seem to be used anywhere"
DF2E DATA BAUD_TABLE
DF2F DATAW DDF2F
DF31 DATA DDF31
DF32 DATAW DDF32
DF34 DATA DDF34
DF35 DATAW DDF35
DF37 DATA DDF37
DF38 DATAW DDF38
DF3A DATA DDF3A
DF3B DATAW DDF3B
DF3D DATA DDF3D
DF3E DATAW DDF3E
DF40 DATA DDF40
DF41 DATAW DDF41
DF43 DATA DDF43
DF44 DATA JUMPTABLE5
DF45 DATAW DDF45
DF47 DATA DDF47
DF48 DATAW DDF48
DF4A DATA DDF4A
DF4B DATAW DDF4B
DF4D DATA DDF4D
DF4E DATAW DDF4E
DF50 DATA DDF50
DF51 DATAW DDF51
DF53 DATA DDF53
DF54 DATAW DDF54
DF56 DATA DDF56
DF57 DATAW DDF57
DF59 DATA DDF59
DF5A DATAW DDF5A
DF5C DATA DDF5C
DF5D DATAW DDF5D
DF5F DATA DDF5F
DF60 DATAW DDF60
DF62 DATA DDF62
DF63 DATAW DDF63
DF65 DATA DDF65
DF66 DATAW DDF66
DF68 DATA DDF68
DF69 DATAW DDF69
DF6B DATA DDF6B
DF6C DATAW DDF6C
DF6E DATA DDF6E
DF6F DATAW DDF6F
DF71 DATA DDF71
DF72 DATAW DDF72
DF74 DATA DDF74
DF75 DATAW DDF75
DF77 DATA DDF77
DF78 DATAW DDF78
DF7A DATA DDF7A
DF7B DATAW DDF7B
DF7D DATA DDF7D
DF7E DATAW DDF7E
DF80 DATA DDF80
DF81 DATAW DDF81
DF83 DATA DDF83
DF84 DATAW DDF84
DF86 DATA DDF86
DF87 DATAW DDF87
DF89 DATA DDF89
DF8A DATAW DDF8A
DF8C DATA DDF8C
DF8D DATAW DDF8D
DF8F DATA DDF8F
DF90 DATAW DDF90
DF92 DATA DDF92
DF93 DATAW DDF93
DF95 DATA TABLEX
DF96 DATAW DDF96
DF99 DATAW DDF99
DF9C DATAW DDF9C
DF9F STRZ COPYRIGHT
DFA7 STRZ IMSAI
DFC7 STRZ HITSPACE
DFD7 STRZ INVALIDBAUD
DFE4 STRZ BAUDSERIAL
DFF2 STRZ PARALLEL
DFFD DATA END
E006 CODE JUMP2
E00C CODE HOOK_REBOOT
E7FD CODE SIG_D
E7FE CODE SIG_I
F800 CODE HOOK_BOOT "Hook on boot?"
F803 CODE HOOK_PRINT "Looks like a hook for print"
FFFD DATA TEST
D802 COMMENT "Mem mapping?"
D810 COMMENT "Init stack"
D820 COMMENT "No output"
D829 COMMENT "FFFD='V'?"
D830 COMMENT "FFFE='I'?"
D856 COMMENT "Monitor entry point"
D859 COMMENT "RET will return at MONENTRY"
D85D COMMENT "'?'"
D85F COMMENT "Prints '?'"
D868 COMMENT "Look up for A and jump to address in the table"
D86E COMMENT "Not found"
D884 COMMENT "'D'"
D88C COMMENT "'I'"
D8A9 COMMENT "Restore mapping"
D988 COMMENT "HL == 0?"
D9A6 COMMENT "Store prev HL in d100"
D9D3 COMMENT "LF"
D9D6 COMMENT "'-'"
D9EF COMMENT "24 (lines?)"
DAF1 COMMENT "%1101 1011"
DAFA COMMENT "Will call there"
DAFE COMMENT "C9 = RET"
DB8B COMMENT "Prints 'T'"
DBC6 COMMENT "Prints 'C'"
DBCE COMMENT "Prints '*'"
DC19 COMMENT "Prints 'I'"
DDB2 COMMENT "Save result of read HEX (Z if ok?)"
DDBA COMMENT "Restore result of read HEX"
DDC0 COMMENT "DE defaults to HL"
DDC1 COMMENT "LF"
DDC3 COMMENT "HL = HEX4"
DDC4 COMMENT "' '"
DDC9 COMMENT "'~' => re-read DE"
DDCB COMMENT "Prob 'error'"
DDD1 COMMENT "HL = HEX4, DE = HEX4"
DDDB COMMENT "DE defaults to 0000"
DDE4 COMMENT "End of table"
DDE7 COMMENT "Found"
DDEC COMMENT "Next adrs"
DDF3 COMMENT "Sets NZ"
DE8F COMMENT "CR?"
DE94 COMMENT "^C?"
DE99 COMMENT "^U?"
DEA1 COMMENT "ESC?"
DEA6 COMMENT "ESC"
DEA9 COMMENT "Again"
DEAE COMMENT "Return if <'a'"
DEB1 COMMENT "Return if >'Z'"
DEB2 COMMENT "Make uppercase"
DEBF COMMENT "Print hex number 2 digits"
DEC8 COMMENT "Print hex digit"
DEDD COMMENT "Print ' '"
DEF2 COMMENT "HL << 4"
DEF4 COMMENT "HL << 4 | A"
DEF9 COMMENT "'0'"
DEFC COMMENT "<= '9'"
DF03 COMMENT "> 'F'"
DF08 COMMENT "C = 0"
DF09 COMMENT "A = 0..F"
DF16 COMMENT "Print address"
DF1A COMMENT "And content"
DF2E COMMENT "9600 bauds"
DF31 COMMENT "150 bauds"
DF34 COMMENT "300 bauds"
DF37 COMMENT "4800 bauds"
DF3A COMMENT "2400 bauds"
DF3D COMMENT "1200 bauds"
DF40 COMMENT "600 bauds"
DF43 COMMENT "End of table"
DF44 COMMENT "'A'"
DF47 COMMENT "'B'"
DF4A COMMENT "'C'"
DF4D COMMENT "'D'"
DF50 COMMENT "'E'"
DF53 COMMENT "'F'"
DF56 COMMENT "'G'"
DF59 COMMENT "'H'"
DF5C COMMENT "'I'"
DF5F COMMENT "'J'"
DF62 COMMENT "'K'"
DF65 COMMENT "'L'"
DF68 COMMENT "'M'"
DF6B COMMENT "'N'"
DF6E COMMENT "'O'"
DF71 COMMENT "'P'"
DF74 COMMENT "'Q'"
DF77 COMMENT "'R'"
DF7A COMMENT "'S'"
DF7D COMMENT "'T'"
DF80 COMMENT "'U'"
DF83 COMMENT "'V'"
DF86 COMMENT "'W'"
DF89 COMMENT "'X'"
DF8C COMMENT "'Y'"
DF8F COMMENT "'Z'"
DF92 COMMENT "':'"
DF95 COMMENT "'D'"
DF98 COMMENT "'I'"
DF9B COMMENT "'O'"
DF9E COMMENT "End of list"
D874 COMMENT "Exec jump table"
DA91 COMMENT "'C'"
DC1B COMMENT "Prints 'I', the input char and goes to monitor "
DA19 COMMENT "' '"
DA1E COMMENT "DEL"
DA23 COMMENT "'.'"
D804 COMMENT "Initial boot"
D807 COMMENT "Vector ReadChar"
D80A COMMENT "Vector PrintChar"
DE11 COMMENT "Again"
DE1E COMMENT "Again"
DE2B COMMENT "Again"
DEBC COMMENT "Prints '\n'"
DEB7 COMMENT "Prints '\r'"
DE9E COMMENT "Echo char"
D8B3 COMMENT "Print "
D91D COMMENT "Print "
D850 COMMENT "Print "
D92E COMMENT "Print "
D99D COMMENT "Print "
DA3A COMMENT "TODO: check"
DCA4 COMMENT "Print "
DCAA COMMENT "Print "
DD92 COMMENT "Print "
DE63 COMMENT "Loop to next char"
D909 COMMENT "Use device 1"
D922 COMMENT "Use device 2"
DA9C COMMENT "Invalid hex"
DAAA COMMENT "Invalid hex"
DDB9 COMMENT "BC = DE-HL+1"
